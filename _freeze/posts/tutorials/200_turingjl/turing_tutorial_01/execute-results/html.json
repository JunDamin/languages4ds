{
  "hash": "5f11b05d038c644fa6684c399a627aa3",
  "result": {
    "markdown": "---\ntitle: '줄리아와 Turing.jl을 이용한 베이지안 통계 (1): 개관'\ndate: '2023-08-21'\ncagetory:\n  - julia\n  - Turing.jl\n  - tutorial\n  - bayesian statistics\noutput: true\nwarning: false\ncode-fold: true\n---\n\n## 프로젝트 소개\n\n[Bayesian Statsitics using Julia and Turing](https://storopoli.io/Bayesian-Julia/)이라는 온라인 책이 있습니다. \n\n[Creative Commons Attribution-ShareAlike 4.0 Internacional](http://creativecommons.org/licenses/by-sa/4.0/)라이센스를 고려하여 이 구조를 따라서 재구성을 해보고자 합니다.\n\n개인적인 관심이 있어 시작하는 프로젝트로 총 13개의 파트로 구성될 예정입니다.\n\n완전히 동일하게 진행하기 보다는 조금 설명을 덧붙이며 진행하도록 하겠습니다. \n\n## 베이지안 통계란?\n\n베이지안 통계는 베이즈 정리를 기반으로 하는 추론적 통계 방법입니다. 통계 모델의 매개변수 분포를 관측 데이터의 정보를 사용하여 업데이트를 하여 추론합니다. 모델에 대한 지식은 사전 분포로 표현되며, 관측 데이터는 우도 함수 형태로 사전 분포와 결합하여 사후 분포를 결정합니다. 사후 분포는 미래 이벤트에 대한 예측에도 사용될 수 있습니다.\n\n베이지안 통계가 전통적인 빈도주의 통계와의 근본적인 차이는 확률변수에 대한 관점 입니다. 전통적인 통계는 파라미터 값이 고정되어 있고 우리가 관측하게 될 값이 확률에 따라 나타는 불확실한 부분(확률변수)로 바라봅니다. 하지만 베이지안 통계는 우리가 관측한 값은 고정되어 있고 파라미터 값이 불확실한 확률변수로 바라봅니다. 이 근본적인 관점의 차이에도 불구하고 대부분의 경우 거의 동일한 결과를 나타냅니다.\n\n그러면 왜 굳이 베이지안 통계를 사용하게 될까요? 베이지안 통계가 최근에 각광 받게 된 이유 중 하나는 점진적으로 업데이트를 진행할 수 있기 때문입니다. 빈도주의 통계에서는 새로운 데이터가 생겼을 때 새롭게 모델을 구축하고 산출해야 하지만, 베이지안 통계에서는 기존 데이터를 반영한 모델을 사전 분포로 사용하고 관측 데이터를 결합할 수 있어 점진적인 모델링이 가능한 장점이 있습니다. \n\n## Julia 언어란?\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Julia_prog_language.svg/2560px-Julia_prog_language.svg.png){width=50% fig-align=\"center\"}\n\nJulia는 LLVM을 사용하여 Just-in-time(JIT)으로 네이티브 코드로 컴파일하는 빠른 동적 유형 언어입니다. \n\"C처럼 실행되지만 Python처럼 읽는다\"는 의미로, 매우 빠르고 프로토타입을 만들고 코드를 읽고 쓰기 쉽습니다. \n많은 현대적 언어와 유사하게 명령형, 함수형, 객체 지향 프로그래밍의 기능을 결합한 다중 패러다임 언어입니다. \nJulia의 기본 사항과 Julia를 사용한 모든 종류의 데이터 조작에 대해서는 이 튜토리얼에서는 다루지 않을 것입니다. \n대신 Julia에 대한 소개와 Julia에서 테이블 형식의 데이터를 다루는 방법에 대한 다음 리소스를 찾아보세요.\n\n- [Julia Documentation](https://docs.julialang.org/): Julia documentation은 언어의 기본 디자인과 기능을 설명하는 매우 친절하고 잘 쓰여진 자료입니다. Julia Korea에서 번역한 [한국어 자료](https://juliakorea.github.io/)도 있습니다.\n- [Julia Data Science](https://juliadatascience.io/): Julia를 사용하여 어떻게 데이터 과학을 할 수 있는지 소개해주는 책입니다.\n- [Thinking Julia](https://benlauwens.github.io/ThinkJulia.jl/latest/book.html): Julia 언어 뒤에 있는 주요 개념과 기능을 설명하는 입문자 친화적인 책입니다.\n- [Julia High Performance](https://www.amazon.com/Julia-High-Performance-Avik-Sengupta/dp/178829811X) : Julia Language의 두 창시자(Avik Sengupta와 Alan Edelman)가 쓴 책으로, 일부 원칙과 트릭으로 Julia를 더 빠르게 만드는 방법을 다룹니다.\n- [An Introduction DataFrames](https://github.com/bkamins/Julia-DataFrames-Tutorial): 패키지 DataFrames.jl은 Julia에서 테이블 형식의 데이터를 다루는 데 사용할 수 있는 도구를 제공합니다. 이 패키지의 디자인과 기능은 pandas(Python)와 data.frame, data.table 및 dplyr(R)과 유사하며 특히 R 또는 Python에서 Julia로 넘어오는 사람들에게 유용한 데이터 과학 도구입니다. 링크는 DataFrames.jl의 주요 기여자 중 한 명인 Bogumił Kamiński가 만든 DataFrames.jl을 소개하는 노트북 모음입니다.\n\n## Turing.jl 이란?\n\nTuring은 확률적 프로그래밍을 사용하여 베이지안 추론을 할 수 있게 도와주는 Julia 패키지 입니다. Turing을 사용하면 읽기 쉬운 베이지안 확률 모델을 만들 수 있습니다. 모델은 수식으로 적는 방식과 동일하게 동작합니다. Julia의 모든 것과 마찬가지로 Turing은 빠른 특징을 가지고 있습니다.\n\n",
    "supporting": [
      "turing_tutorial_01_files"
    ],
    "filters": [],
    "includes": {}
  }
}